create database project1;
use project1;
CREATE TABLE goldusers_signup(userid integer,gold_signup_date date); 

INSERT INTO goldusers_signup(userid,gold_signup_date) 
 VALUES (1,'2017-09-22'),
(3,'2017-04-21');

drop table if exists users;
CREATE TABLE users(userid integer,signup_date date); 

INSERT INTO users(userid,signup_date) 
 VALUES (1,'2014-09-02'),
(2,'2015-01-15'),
(3,'2014-04-11');

CREATE TABLE sales(userid integer,created_date date,product_id integer); 

INSERT INTO sales(userid,created_date,product_id) 
 VALUES (1,'2017-04-19',2),
(3,'2019-12-18',1),
(2,'2020-07-20',3),
(1,'2019-10-23',2),
(1,'2018-03-19',3),
(3,'2016-12-20',2),
(1,'2016-11-09',1),
(1,'2016-05-20',3),
(2,'2017-09-24',1),
(1,'2017-03-11',2),
(1,'2017-03-11',1),
(3,'2016-11-10',1),
(3,'2017-12-07',2),
(3,'2016-12-15',2),
(2,'2017-11-08',2),
(2,'2018-09-10',3);


drop table if exists product;
CREATE TABLE product(product_id integer,product_name text,price integer); 

INSERT INTO product(product_id,product_name,price) 
 VALUES
(1,'p1',980),
(2,'p2',870),
(3,'p3',330);
use project1;


select * from sales;
select * from product;
select * from goldusers_signup;
select * from users;
#total amount each customer spent on zomato
select d.userid, sum(d.price) total_amount from
(select a.userid, b.price from sales a inner join product b
on a.product_id=b.product_id)d
group by userid;

#no of days each customer visited zomato
select userid, count(created_date) num_days from sales
group by userid;
#first product purchased by each customer
select userid,created_date, first_value(product_id) over (partition by userid
order by created_date)first_product from sales;
#most purchased item on the menu and number of times it was purchased 
#by all customers

select count(a.userid)num_times, b.product_name from sales a inner join
product b on a.product_id=b.product_id group by product_name
limit 1;
#favourite item of each individual user
select * from
(select d.*, rank() over (partition by userid order by cnt desc)rnk from
(select userid, product_id, count(product_id)cnt from sales
group by userid, product_id)d) e
where rnk=1;
#item which was first purchased by customer after they became the member
select * from
(select d.*, rank() over (partition by userid order by created_date)rnk from
(select a.userid, a.created_date, a.product_id, b.gold_signup_date
from sales a inner join goldusers_signup b on a.userid=b.userid
and created_date>gold_signup_date)d) e 
where rnk = 1;
#item which was purchased just before the customer became a member
use project1;
select * from
(select d.*, rank() over (partition by userid order by created_date desc)rnk from
(select a.userid, a.created_date, a.product_id, b.gold_signup_date
from sales a inner join goldusers_signup b on a.userid=b.userid
and created_date<gold_signup_date)d)e
where rnk=1;
#total number of orders and amount spent by customer before becoming a member


select f.userid, count(f.created_date)num_orders, sum(f.price)amount from
(select d.*, e.price from 
(select a.userid, a.created_date, a.product_id, b.gold_signup_date
from sales a inner join goldusers_signup b on a.userid=b.userid
and created_date<gold_signup_date)d
inner join product e on d.product_id=e.product_id)f
group by userid;
#if each product has different purchasing points like for p1=5rs equals to 
#1 zomato point, p2= 10rs equals to 5 zomato points, p3= 5rs equals 1 zomato point
#calculate points collected by each customer.
select g.userid, sum(zom_points) from
(select f.*,price/points zom_points from
(select e.*, case when product_id=1 then 5 when product_id=2 then 2
when product_id=3 then 5 else 0 end as points from
(select a.*, b.price from sales a inner join product b on
a.product_id=b.product_id)e)f)g
group by userid;
#in the first one year after a customer joins the gold program and 
#earns 5 zomato points for every 10 rs they spend. So what was 
#their point earning in the first year

select d.*, e.price*0.5 points_earned from
(select a.userid, a.created_date, a.product_id, b.gold_signup_date
from sales a inner join goldusers_signup b on a.userid=b.userid
and created_date>gold_signup_date and created_date< date_add(gold_signup_date, INTERVAL 1 YEAR))d
inner join product e on d.product_id=e.product_id;
#rank all the transactions of the customers
select d.*, rank() over (partition by userid order by amt_spent desc)rnk from
(select a.userid, a.product_id, sum(b.price)amt_spent from sales a 
inner join product b on a.product_id = b. product_id
group by userid, product_id order by userid)d;
#rank all the transactions for each member whenever they are a 
#zomato gold member (for every non-gold memeber mark as n.a)
select e.*, case when e.gold_signup_date is null then 'n.a' else rnk
end as gold_rank from
(select d.*, rank() over (partition by userid order by created_date desc)rnk from
(select a.userid, a.created_date, a.product_id, b.gold_signup_date
from sales a left join goldusers_signup b on a.userid=b.userid
and created_date>gold_signup_date)d)e;
